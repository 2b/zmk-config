/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define SYM 1
#define NAV 2
#define FUN 3

&mt {
    flavor = "balanced";
    tapping_term_ms = <150>;
}

&lt {
    flavor = "balanced";
    tapping_term_ms = <150>;
}

/ {
    behaviors {
        am: alpha_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "alpha mod-taps";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp Q       &kp W      &kp E         &kp R &kp T    &kp Y         &kp U &kp I          &kp O        &kp P
            &kp A       &kp S      &kp D         &kp F &kp G    &kp H         &kp J &kp K          &kp L        &kp SQT
            &mt LSHFT Z &mt LGUI X &mt RALT C    &kp V &kp B    &kp N         &kp M &mt LALT COMMA &mt RGUI DOT &mt RCTRL FSLH
                                   &mt LCTRL ESC &lt NAV BSPC   &lt SYM SPACE &mt RSHFT RET
            >;
        };

        sym_layer {
            bindings = <
            &kp N1    &kp N2   &kp N3   &kp N4    &kp N5      &kp N6    &kp N7    &kp N8    &kp N9    &kp N0
            &kp EXCL  &kp AT   &kp HASH &kp DLLR  &kp PRCNT   &kp CARET &kp MINUS &kp UNDER &kp EQUAL &kp PLUS
            &kp LSHFT &kp LGUI &kp RALT &kp SEMI  &kp AMPS    &kp STAR  &kp BSLH  &kp LALT  &kp RGUI  &kp LSHFT
                                        &kp LCTRL &mo FUN     &trans    &kp LSHFT
            >;
        };

        nav_layer {
            bindings = <
            &kp LA(F4)       &kp LC(LS(TAB)) &kp LC(TAB)  &kp LC(F4)          &kp C_VOL_UP &kp HOME &kp PG_DN &kp PG_UP  &kp END    &kp K_CALC
            &kp LC(LG(LEFT)) &kp LALT        &kp TAB      &kp LC(LG(RIGHT))   &kp C_VOL_DN &kp LEFT &kp DOWN  &kp UP     &kp RIGHT  &kp PAUSE_BREAK
            &kp LCTRL        &kp LGUI        &kp RALT     &kp LS(INS)         &kp C_PP     &kp INS  &kp DEL   &kp C_PREV &kp C_NEXT &kp PSCRN
                                             &kp LCTRL    &trans              &mo FUN      &kp LSHFT
            >;
        };

        fun_layer {
            bindings = <
            &kp F1   &kp F2   &kp F3   &kp F4       &kp F5    &kp CAPS  &kp KP_N7 &kp KP_N8      &kp KP_N9      &bt BT_CLR
            &kp F6   &kp F7   &kp F8   &kp F9       &kp F10   &kp LNLCK &kp KP_N4 &kp KP_N5      &kp KP_N6      &reset
            &kp LSFT &kp LGUI &kp LALT &kp F11      &kp F12   &kp KP_N0 &kp KP_N1 &mt LALT KP_N2 &mt RGUI KP_N3 &out OUT_TOG
                                       &bt BT_SEL 0 &trans    &trans    &bt BT_SEL 1 
            >;
        };
    };
};
